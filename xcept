# Define the path to your CSV file
$csvPath = ".\exceptionout.csv"

# Check if the CSV file exists
if (-not (Test-Path -Path $csvPath)) {
    Write-Host "CSV file not found at path: $csvPath"
    return
}

# Import the CSV
$data = Import-Csv -Path $csvPath

# Create a hashtable to store unique SecArch and ActionPlan entries with associated EONIDs
$result = @{
    SecArch = @{}
    ActionPlan = @{}
}

# Process each row in the CSV
foreach ($row in $data) {
    # Process SecArch values
    if ($row.SecArch -and $row.SecArch -ne "N/A") {
        if (-not $result.SecArch.ContainsKey($row.SecArch)) {
            $result.SecArch[$row.SecArch] = @()  # Initialize an empty array for EONIDs
        }
        # Add unique EONID to the SecArch entry
        if (-not $result.SecArch[$row.SecArch].Contains($row.AppEONID)) {
            $result.SecArch[$row.SecArch] += $row.AppEONID
        }
    }

    # Process ActionPlan values
    if ($row.ActionPlan -and $row.ActionPlan -ne "N/A") {
        if (-not $result.ActionPlan.ContainsKey($row.ActionPlan)) {
            $result.ActionPlan[$row.ActionPlan] = @()  # Initialize an empty array for EONIDs
        }
        # Add unique EONID to the ActionPlan entry
        if (-not $result.ActionPlan[$row.ActionPlan].Contains($row.AppEONID)) {
            $result.ActionPlan[$row.ActionPlan] += $row.AppEONID
        }
    }
}

# Display the results in a readable format
Write-Host "SecArch and associated EONIDs:"
foreach ($secArch in $result.SecArch.Keys) {
    Write-Host "$secArch:`t$($result.SecArch[$secArch] -join ', ')"
}

Write-Host "`nActionPlan and associated EONIDs:"
foreach ($actionPlan in $result.ActionPlan.Keys) {
    Write-Host "$actionPlan:`t$($result.ActionPlan[$actionPlan] -join ', ')"
}

# Optional: Export results to a new CSV file with SecArch, ActionPlan, and associated EONIDs

# Prepare SecArch Data for export
$secArchOutput = foreach ($secArch in $result.SecArch.Keys) {
    [pscustomobject]@{
        Type       = "SecArch"
        Identifier = $secArch
        EONIDs     = $result.SecArch[$secArch] -join ', '
    }
}

# Prepare ActionPlan Data for export
$actionPlanOutput = foreach ($actionPlan in $result.ActionPlan.Keys) {
    [pscustomobject]@{
        Type       = "ActionPlan"
        Identifier = $actionPlan
        EONIDs     = $result.ActionPlan[$actionPlan] -join ', '
    }
}

# Combine both results and export
$combinedOutput = $secArchOutput + $actionPlanOutput
$combinedOutput | Export-Csv -Path ".\unique_exceptions_with_EONIDs.csv" -NoTypeInformation -Force

Write-Host "Export completed: unique_exceptions_with_EONIDs.csv"
