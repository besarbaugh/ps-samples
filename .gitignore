function Subtract-Exceptions {
    param (
        [array]$data
        [string]$exceptionsJsonPath  # Path to the JSON file containing the exceptions
    )

    # Load data from the CSV file
    $data = Import-Csv -Path $csvPath

    # Load exceptions from the JSON file
    $exceptions = Get-Content -Path $exceptionsJsonPath | ConvertFrom-Json

    # Create an empty array to hold filtered results
    $filteredResults = @()

    # Loop through each item in the data array
    foreach ($item in $data) {
        # Check if the current item matches any exception
        $isException = $false
        foreach ($exception in $exceptions) {
            # Match conditions based on AppObjectId, AppEonId, and roles
            if (($item.AppObjectId -eq $exception.spn_object_id -and
                $item.AppEonId -eq $exception.spn_eonid) -or
                ($item.AppDisplayName -like "*$($exception.spnNameLike)*") -or
                ($item.ObjectName -like "*$($exception.azureObjectNameLike)*") -or
                ($exception.roles -contains $item.PrivRole.ToLower())) {
                $isException = $true
                break  # Exit the loop if a match is found
            }
        }

        # If no exceptions were found, add the item to the results
        if (-not $isException) {
            $filteredResults += $item
        }
    }

    return $filteredResults
}
