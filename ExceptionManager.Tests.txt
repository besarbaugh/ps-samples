# Import the module before running tests
$scriptDir = Split-Path -Parent $MyInvocation.MyCommand.Definition
Import-Module (Join-Path $scriptDir "..\modules\ExceptionManager.psm1")

# Start the Pester test block
Describe 'ExceptionManager Module Tests' {

    # Test for Get-Exceptions
    Describe 'Get-Exceptions' {
        It 'Should return a hashtable from a valid file path' {
            $exceptions = Get-Exceptions
            $exceptions | Should -Not -BeNullOrEmpty
            $exceptions | Should -BeOfType 'hashtable'
        }

        It 'Should throw an error if the file path does not exist' {
            { Get-Exceptions } | Should -Throw "File not found"
        }
    }

    # Test for Test-ExceptionSchema
    Describe 'Test-ExceptionSchema' {
        It 'Should return $true for a valid exception' {
            $validException = @{
                spnname_patterns = @{
                    patterns = @("*prod*", "*service*")
                    match_type = "OR"
                }
                SPNdeptID = "Dept001"
                containertype = @("RG")
                role = @("owner")
                environment = "Prod"
                dynamic = $true
                dynamic_scope = $false
                exception_type = "dynamic"
            }

            $result = Test-ExceptionSchema -Exception $validException
            $result | Should -Be $true
        }

        It 'Should return $false for an invalid exception' {
            $invalidException = @{
                spnname_patterns = @{
                    patterns = @("*prod*", "*service*")
                    match_type = "OR"
                }
                # Missing required fields like SPNdeptID, containertype, etc.
            }

            $result = Test-ExceptionSchema -Exception $invalidException
            $result | Should -Be $false
        }
    }

    # Test for Add-Exception
    Describe 'Add-Exception' {
        It 'Should add a new exception to a valid exceptions.json file' {
            # Mocking a file path for testing purposes
           
